cmake_minimum_required (VERSION 2.8)
project (chip8 CXX)

option(test "Automatically run and build the tests when running make" OFF)

if(CMAKE_BUILD_TYPE STREQUAL "")
  set(CMAKE_BUILD_TYPE Debug)
endif()

list(APPEND CMAKE_CXX_FLAGS "-std=c++0x -Wall -Wextra -pedantic")

include_directories("${PROJECT_BINARY_DIR}")

add_subdirectory(include/gtest EXCLUDE_FROM_ALL)
include_directories(${gtest_SOURCE_DIR}/include)

enable_testing()
add_executable(Chip8Test
              src/chip8Test.cpp
              src/chip8.cpp)
target_link_libraries(Chip8Test gtest_main)
add_test(Chip8Test Chip8Test)

if (test)
	add_custom_target(tests ALL ctest DEPENDS Chip8Test)
else()
	add_custom_target(tests ctest DEPENDS Chip8Test)
endif()

function(autogenerated_header FILE)
  get_filename_component(BASE ${FILE} NAME_WE)
  set(HEADER "src/res/${BASE}.h")
  set_source_files_properties(${HEADER} PROPERTIES GENERATED TRUE)
  add_custom_command(
    OUTPUT ${HEADER}
    COMMAND python utils/resconverter.py ${FILE} ${HEADER}
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
  )
endfunction(autogenerated_header)

set(EXECUTABLE_NAME Chip8Emulator)
add_executable(${EXECUTABLE_NAME}
                src/emulator.cpp
                src/res/blip.h
                src/chip8.cpp)

autogenerated_header(resources/sounds/blip.wav)

#Libraries
set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake_modules" ${CMAKE_MODULE_PATH})
find_package(SFML 2 REQUIRED system window graphics network audio)

include_directories(${SFML_INCLUDE_DIR})
target_link_libraries(${EXECUTABLE_NAME} ${SFML_LIBRARIES})
